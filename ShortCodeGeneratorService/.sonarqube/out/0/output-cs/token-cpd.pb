½
\D:\Tools\WebAPI\Microservices\ShortCodeGeneratorService\ShortCodeGeneratorService\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
var

 
connectionString

 
=

 
builder

 
.

 
Configuration

 ,
.

, -
GetConnectionString

- @
(

@ A
$str

A T
)

T U
;

U V
builder 
. 
Services 
. 
AddDbContext 
< 
AppDBContext *
>* +
(+ ,
options, 3
=>4 6
options 
. 
UseMySql 
( 
connectionString %
,% &
ServerVersion' 4
.4 5

AutoDetect5 ?
(? @
connectionString@ P
)P Q
)Q R
) 
; 
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
AddCors 
( 
options  
=>! #
{ 
options 
. 
	AddPolicy 
( 
$str  
,  !
policy" (
=>) +
{ 
policy 
. 
AllowAnyOrigin 
( 
) 
. 	
AllowAnyMethod	 
( 
) 
. 	
AllowAnyHeader	 
( 
) 
; 
} 
) 
; 
} 
) 
; 
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if   
(   
app   
.   
Environment   
.   
IsDevelopment   !
(  ! "
)  " #
)  # $
{!! 
app"" 
."" 

UseSwagger"" 
("" 
)"" 
;"" 
app## 
.## 
UseSwaggerUI## 
(## 
c## 
=>## 
{$$ 
c%% 	
.%%	 

SwaggerEndpoint%%
 
(%% 
$str%% 4
,%%4 5
$str%%6 Q
)%%Q R
;%%R S
}&& 
)&& 
;&& 
}'' 
app** 
.** 
UseHttpsRedirection** 
(** 
)** 
;** 
app++ 
.++ 
UseCors++ 
(++ 
$str++ 
)++ 
;++ 
app,, 
.,, 
UseAuthorization,, 
(,, 
),, 
;,, 
app.. 
... 
MapControllers.. 
(.. 
).. 
;.. 
app00 
.00 
Run00 
(00 
)00 	
;00	 
Æ
eD:\Tools\WebAPI\Microservices\ShortCodeGeneratorService\ShortCodeGeneratorService\Models\ShortCode.cs
	namespace 	%
ShortCodeGeneratorService
 #
.# $
Models$ *
{ 
public 

class 
	ShortCode 
{ 
public 
int 
ShortCodeID 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
ShortCodeURL "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
ShortCodeCreatedAt (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public		 
string		  
ShortCodeDescription		 *
{		+ ,
get		- 0
;		0 1
set		2 5
;		5 6
}		7 8
}

 
} ®
|D:\Tools\WebAPI\Microservices\ShortCodeGeneratorService\ShortCodeGeneratorService\Migrations\20250710052252_Initialcreate.cs
	namespace 	%
ShortCodeGeneratorService
 #
.# $

Migrations$ .
{ 
public		 

partial		 
class		 
Initialcreate		 &
:		' (
	Migration		) 2
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterDatabase *
(* +
)+ ,
. 

Annotation 
( 
$str +
,+ ,
$str- 6
)6 7
;7 8
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str "
," #
columns 
: 
table 
=> !
new" %
{ 
ShortCodeID 
=  !
table" '
.' (
Column( .
<. /
int/ 2
>2 3
(3 4
type4 8
:8 9
$str: ?
,? @
nullableA I
:I J
falseK P
)P Q
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
ShortCodeURL  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> H
,H I
nullableJ R
:R S
falseT Y
)Y Z
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
ShortCodeCreatedAt &
=' (
table) .
.. /
Column/ 5
<5 6
string6 <
>< =
(= >
type> B
:B C
$strD N
,N O
nullableP X
:X Y
falseZ _
)_ `
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @ 
ShortCodeDescription (
=) *
table+ 0
.0 1
Column1 7
<7 8
string8 >
>> ?
(? @
type@ D
:D E
$strF P
,P Q
nullableR Z
:Z [
false\ a
)a b
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
} 
, 
constraints 
: 
table "
=># %
{ 
table   
.   

PrimaryKey   $
(  $ %
$str  % 4
,  4 5
x  6 7
=>  8 :
x  ; <
.  < =
ShortCodeID  = H
)  H I
;  I J
}!! 
)!! 
."" 

Annotation"" 
("" 
$str"" +
,""+ ,
$str""- 6
)""6 7
;""7 8
}## 	
	protected&& 
override&& 
void&& 
Down&&  $
(&&$ %
MigrationBuilder&&% 5
migrationBuilder&&6 F
)&&F G
{'' 	
migrationBuilder(( 
.(( 
	DropTable(( &
(((& '
name)) 
:)) 
$str)) "
)))" #
;))# $
}** 	
}++ 
},, ß
fD:\Tools\WebAPI\Microservices\ShortCodeGeneratorService\ShortCodeGeneratorService\Data\AppDBContext.cs
	namespace 	%
ShortCodeGeneratorService
 #
.# $
Data$ (
{ 
public 

class 
AppDBContext 
: 
	DbContext '
{ 
public 
AppDBContext 
( 
DbContextOptions ,
<, -
AppDBContext- 9
>9 :
options; B
)B C
:D E
baseF J
(J K
optionsK R
)R S
{ 	
}		 	
public

 
DbSet

 
<

 
	ShortCode

 
>

 

ShortCodes

  *
{

+ ,
get

- 0
;

0 1
set

2 5
;

5 6
}

7 8
} 
} à2
uD:\Tools\WebAPI\Microservices\ShortCodeGeneratorService\ShortCodeGeneratorService\Controllers\ShortCodesController.cs
	namespace 	%
ShortCodeGeneratorService
 #
.# $
Controllers$ /
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 

class  
ShortCodesController %
:& '
ControllerBase( 6
{ 
private 
readonly 
AppDBContext %
_context& .
;. /
public  
ShortCodesController #
(# $
AppDBContext$ 0
context1 8
)8 9
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
	ShortCode3 <
>< =
>= >
>> ?
GetShortCodes@ M
(M N
)N O
{ 	
return 
await 
_context !
.! "

ShortCodes" ,
., -
ToListAsync- 8
(8 9
)9 :
;: ;
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
ActionResult &
<& '
	ShortCode' 0
>0 1
>1 2
GetShortCode3 ?
(? @
int@ C
idD F
)F G
{ 	
var 
	shortCode 
= 
await !
_context" *
.* +

ShortCodes+ 5
.5 6
	FindAsync6 ?
(? @
id@ B
)B C
;C D
if 
( 
	shortCode 
== 
null !
)! "
{   
return!! 
NotFound!! 
(!!  
)!!  !
;!!! "
}"" 
return$$ 
	shortCode$$ 
;$$ 
}%% 	
[(( 	
HttpPut((	 
((( 
$str(( 
)(( 
](( 
public)) 
async)) 
Task)) 
<)) 
IActionResult)) '
>))' (
PutShortCode))) 5
())5 6
int))6 9
id)): <
,))< =
	ShortCode))> G
	shortCode))H Q
)))Q R
{** 	
if++ 
(++ 
id++ 
!=++ 
	shortCode++ 
.++  
ShortCodeID++  +
)+++ ,
{,, 
return-- 

BadRequest-- !
(--! "
)--" #
;--# $
}.. 
_context00 
.00 
Entry00 
(00 
	shortCode00 $
)00$ %
.00% &
State00& +
=00, -
EntityState00. 9
.009 :
Modified00: B
;00B C
try22 
{33 
await44 
_context44 
.44 
SaveChangesAsync44 /
(44/ 0
)440 1
;441 2
}55 
catch66 
(66 (
DbUpdateConcurrencyException66 /
)66/ 0
{77 
if88 
(88 
!88 
ShortCodeExists88 $
(88$ %
id88% '
)88' (
)88( )
{99 
return:: 
NotFound:: #
(::# $
)::$ %
;::% &
};; 
else<< 
{== 
throw>> 
;>> 
}?? 
}@@ 
returnBB 
	NoContentBB 
(BB 
)BB 
;BB 
}CC 	
[FF 	
HttpPostFF	 
]FF 
publicGG 
asyncGG 
TaskGG 
<GG 
ActionResultGG &
<GG& '
	ShortCodeGG' 0
>GG0 1
>GG1 2
PostShortCodeGG3 @
(GG@ A
	ShortCodeGGA J
	shortCodeGGK T
)GGT U
{HH 	
_contextII 
.II 

ShortCodesII 
.II  
AddII  #
(II# $
	shortCodeII$ -
)II- .
;II. /
awaitJJ 
_contextJJ 
.JJ 
SaveChangesAsyncJJ +
(JJ+ ,
)JJ, -
;JJ- .
returnLL 
CreatedAtActionLL "
(LL" #
$strLL# 1
,LL1 2
newLL3 6
{LL7 8
idLL9 ;
=LL< =
	shortCodeLL> G
.LLG H
ShortCodeIDLLH S
}LLT U
,LLU V
	shortCodeLLW `
)LL` a
;LLa b
}MM 	
[PP 	

HttpDeletePP	 
(PP 
$strPP 
)PP 
]PP 
publicQQ 
asyncQQ 
TaskQQ 
<QQ 
IActionResultQQ '
>QQ' (
DeleteShortCodeQQ) 8
(QQ8 9
intQQ9 <
idQQ= ?
)QQ? @
{RR 	
varSS 
	shortCodeSS 
=SS 
awaitSS !
_contextSS" *
.SS* +

ShortCodesSS+ 5
.SS5 6
	FindAsyncSS6 ?
(SS? @
idSS@ B
)SSB C
;SSC D
ifTT 
(TT 
	shortCodeTT 
==TT 
nullTT !
)TT! "
{UU 
returnVV 
NotFoundVV 
(VV  
)VV  !
;VV! "
}WW 
_contextYY 
.YY 

ShortCodesYY 
.YY  
RemoveYY  &
(YY& '
	shortCodeYY' 0
)YY0 1
;YY1 2
awaitZZ 
_contextZZ 
.ZZ 
SaveChangesAsyncZZ +
(ZZ+ ,
)ZZ, -
;ZZ- .
return\\ 
	NoContent\\ 
(\\ 
)\\ 
;\\ 
}]] 	
private__ 
bool__ 
ShortCodeExists__ $
(__$ %
int__% (
id__) +
)__+ ,
{`` 	
returnaa 
_contextaa 
.aa 

ShortCodesaa &
.aa& '
Anyaa' *
(aa* +
eaa+ ,
=>aa- /
eaa0 1
.aa1 2
ShortCodeIDaa2 =
==aa> @
idaaA C
)aaC D
;aaD E
}bb 	
}cc 
}dd 